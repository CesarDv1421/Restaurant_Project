generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model category {
  id              Int               @id @default(autoincrement())
  category        String            @db.VarChar(50)
  menu            menu[]
  variantedelmenu variantedelmenu[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model menu {
  id                Int                 @id @default(autoincrement())
  name              String              @db.VarChar(50)
  description       String?             @db.VarChar(500)
  price             Decimal?            @db.Decimal(10, 1)
  image             String              @db.VarChar(250)
  dishCategory_id   Int
  category          category            @relation(fields: [dishCategory_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK1_category")
  menu_extras       menu_extras[]
  menu_ingredientes menu_ingredientes[]

  @@index([dishCategory_id], map: "FK1_category")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model variantes {
  id                         Int                          @id @default(autoincrement())
  variante                   String                       @db.VarChar(50)
  variantesdelmenu_variantes variantesdelmenu_variantes[]
}

model ingredientes {
  id                            Int                             @id @default(autoincrement())
  ingrediente                   String?                         @db.VarChar(50)
  menu_ingredientes             menu_ingredientes[]
  variantesdelmenu_ingredientes variantesdelmenu_ingredientes[]
}

model variantedelmenu {
  id                            Int                             @id @default(autoincrement())
  platoVariante                 String                          @db.VarChar(50)
  description                   String                          @db.VarChar(250)
  image                         String?                         @db.VarChar(250)
  id_category                   Int?
  category                      category?                       @relation(fields: [id_category], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK1_categoria")
  variantesdelmenu_extras       variantesdelmenu_extras[]
  variantesdelmenu_ingredientes variantesdelmenu_ingredientes[]
  variantesdelmenu_variantes    variantesdelmenu_variantes[]

  @@index([id_category], map: "FK1_categoria")
}

model variantesdelmenu_variantes {
  id                 Int             @id @default(autoincrement())
  id_variantedelmenu Int
  id_variantes       Int
  price              Decimal         @db.Decimal(10, 1)
  variantedelmenu    variantedelmenu @relation(fields: [id_variantedelmenu], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK1_NombrePLato")
  variantes          variantes       @relation(fields: [id_variantes], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK2_Variante")

  @@index([id_variantedelmenu], map: "FK1_NombrePLato")
  @@index([id_variantes], map: "FK2_Variante")
}

model clientes {
  id       Int    @id @default(autoincrement())
  name     String @default("") @db.VarChar(50)
  email    String @default("") @db.VarChar(50)
  password String @default("") @db.VarChar(50)
}

model extras {
  id                      Int                       @id @default(autoincrement())
  extras                  String?                   @db.VarChar(50)
  menu_extras             menu_extras[]
  variantesdelmenu_extras variantesdelmenu_extras[]
}

model menu_extras {
  id       Int      @id @default(autoincrement())
  id_menu  Int?
  id_extra Int?
  price    Decimal? @db.Decimal(10, 1)
  extras   extras?  @relation(fields: [id_extra], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK2_extras")
  menu     menu?    @relation(fields: [id_menu], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_menu")

  @@index([id_extra], map: "FK2_extras")
  @@index([id_menu], map: "FK_menu")
}

model menu_ingredientes {
  id              Int           @id @default(autoincrement())
  id_menu         Int?
  id_ingredientes Int?
  menu            menu?         @relation(fields: [id_menu], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK1_menu")
  ingredientes    ingredientes? @relation(fields: [id_ingredientes], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK2_ingredientes")

  @@index([id_menu], map: "FK1_menu")
  @@index([id_ingredientes], map: "FK2_ingredientes")
}

model variantesdelmenu_extras {
  id              Int              @id
  id_variante     Int?
  id_extras       Int?
  extras          extras?          @relation(fields: [id_extras], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_variantesdelmenu_extras_extras")
  variantedelmenu variantedelmenu? @relation(fields: [id_variante], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_variantesdelmenu_extras_variantedelmenu")

  @@index([id_extras], map: "FK_variantesdelmenu_extras_extras")
  @@index([id_variante], map: "FK_variantesdelmenu_extras_variantedelmenu")
}

model variantesdelmenu_ingredientes {
  id                 Int              @id
  id_variantedelmenu Int?
  id_ingrediente     Int?
  variantedelmenu    variantedelmenu? @relation(fields: [id_variantedelmenu], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK1_variantedelmenu")
  ingredientes       ingredientes?    @relation(fields: [id_ingrediente], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK2_ingrediente")

  @@index([id_variantedelmenu], map: "FK1_variantedelmenu")
  @@index([id_ingrediente], map: "FK2_ingrediente")
}
